# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oDX_oMDh8qie_4gkAYQuZZ77ZBnKrIVY
"""

import streamlit as st

# Scale function (same as your code)
def scale_to_percent(value, danger_level):
    percent = (value / danger_level) * 100
    return min(percent, 100)

def predict_disaster_probabilities(near_water, temp, snakes_insects, wind_speed, rainfall_last_7_days, animal_behavior, near_ocean, month):
    probs = {}

    # Flood risk
    flood_rain = scale_to_percent(rainfall_last_7_days, 300)  # 300mm = max danger
    flood_near_water = 20 if near_water else 0
    probs["Flood"] = min(flood_rain + flood_near_water, 100)

    # Drought risk
    if rainfall_last_7_days >= 20:
        probs["Drought"] = 0
    else:
        heat_component = 0 if temp <= 32 else min(((temp - 32) / (45 - 32)) * 100, 100)
        rain_component = min(((20 - max(rainfall_last_7_days, 0)) / 20) * 100, 100)
        month_component = month if month <= 7 else 0
        probs["Drought"] = min(0.5 * heat_component + 0.5 * rain_component, 100)

    # Cyclone risk
    cyclone_wind = scale_to_percent(wind_speed, 150)
    cyclone_water = 20 if near_water else 0
    probs["Cyclone"] = min(cyclone_wind + cyclone_water, 100) if (near_ocean) else 0

    # Heatwave risk
    if temp <= 35 and month <= 4:
        probs["Heatwave"] = 20
    elif temp >= 45 and month <=4:
        probs["Heatwave"] = 100
    else:
        extra_risk = ((temp - 35) / (55 - 35)) * (100 - 20)
        probs["Heatwave"] = 20 + extra_risk if (month <= 4) else 100 - extra_risk

    # Earthquake risk (placeholder)
    probs["Earthquake"] = 20 if (snakes_insects or animal_behavior) else 5

    return probs


# ---------------- STREAMLIT APP ----------------
st.title("🌍 Natural Disaster Risk Assessment")

st.markdown("Get the probability of a disaster occuring in a few simple steps!")

# Inputs
near_water = st.checkbox("Is there a water body nearby?")
temp = st.number_input("Current Temperature (°C)", min_value=-80, max_value=60, value=30)
snakes_insects = st.checkbox("Are you seeing snakes or insects unusually?")
wind_speed = st.number_input("Wind Speed (km/h)", min_value=0, max_value=400, value=10)
rainfall_last_7_days = st.number_input("Rainfall in last 7 days (mm)", min_value=0.0, max_value=1000.0, value=50.0)
animal_behavior = st.checkbox("Are animals behaving unusually?")
month = st.number_input("Which month is going on?", min_value=1, max_value=12, value=6)
near_ocean = st.checkbox("Are you living on the coast?")

if st.button("Get Probabilities"):
    probs = predict_disaster_probabilities(near_water, temp, snakes_insects, wind_speed, rainfall_last_7_days, animal_behavior, near_ocean, month)

    st.subheader("Estimated Probabilities:")
    for disaster, chance in probs.items():
        if chance >= 0:
            st.write(f"**{disaster}:** {chance:.1f}% chance")
st.caption("An initiative by the students of The Indian School.")